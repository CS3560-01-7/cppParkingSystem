public Scene selectVehicles(Stage primaryStage, Cart cart) throws Exception//ETHAN
	{
        primaryStage.setTitle("Vehicle Selection");
		
		//create a GridPane
		GridPane grid = new GridPane();
		grid.setPadding(new Insets(20,20,20,20));//amount of padding around each edge
		grid.setVgap(8);//set vertical spacing to 10 pixels
		grid.setHgap(10);//set horizontal spacing to 10 pixels
		grid.setAlignment(Pos.CENTER);
		
		cart.getCustomer().getInfoFromDBV();
		

		ArrayList<Vehicle> vehicles = cart.getCustomer().getArrayOfVehicles();
		System.out.println(vehicles.size());
		int carCount = 0;
		int[] index = new int[3];
		for (int i = 0; i < vehicles.size(); i++) {
			if (vehicles.get(i).getAppears() == true) {
				index[carCount] = i;
				carCount++;
				System.out.println(i + " " + carCount);
			}
		}
		
		Text text = new Text("Vehicles on your permit");
		text.setFont(Font.font("Times New Roman",20));
		text.setFill(Color.WHITE);
		GridPane.setConstraints(text, 0, 0, 1, 1);
		
		if (carCount == 0) {
			Text Car0 = new Text("You have no cars, please add up to three");
			Car0.setFont(Font.font("Times New Roman",15));
			Car0.setFill(Color.WHITE);
			GridPane.setConstraints(Car0, 0, 1, 1, 1);
			grid.getChildren().add(Car0);
		}
		
		if (carCount == 1) {
			Vehicle vehicle = vehicles.get(index[0]);
			Text Car1 = new Text("Car 1: " + vehicle.getLicensePlate() + ", " + vehicle.getVehicleMake() + ", " + vehicle.getVehicleColor());
			Car1.setFont(Font.font("Times New Roman",15));
			Car1.setFill(Color.WHITE);
			GridPane.setConstraints(Car1, 0, 1, 1, 1);
			//vehicle.getAppears() 
			grid.getChildren().add(Car1);
		}
		
		
		if (carCount == 2) {
			Vehicle vehicle = vehicles.get(index[0]);
			Text Car1 = new Text("Car 1: " + vehicle.getLicensePlate() + ", " + vehicle.getVehicleMake() + ", " + vehicle.getVehicleColor());
			Car1.setFont(Font.font("Times New Roman",15));
			Car1.setFill(Color.WHITE);
			GridPane.setConstraints(Car1, 0, 1, 1, 1);
			
			
			Vehicle vehicle2 = vehicles.get(index[1]);
			Text Car2 = new Text("Car 2: " + vehicle2.getLicensePlate() + ", " + vehicle2.getVehicleMake() + ", " + vehicle2.getVehicleColor());
			Car2.setFont(Font.font("Times New Roman",15));
			Car2.setFill(Color.WHITE);
			GridPane.setConstraints(Car2, 0, 2, 1, 1);
			grid.getChildren().addAll(Car1, Car2);
		}
		
		if (carCount == 3) {
			Vehicle vehicle = vehicles.get(index[0]);
			Text Car1 = new Text("Car 1: " + vehicle.getLicensePlate() + ", " + vehicle.getVehicleMake() + ", " + vehicle.getVehicleColor());
			Car1.setFont(Font.font("Times New Roman",15));
			Car1.setFill(Color.WHITE);
			GridPane.setConstraints(Car1, 0, 1, 1, 1);
			
			
			Vehicle vehicle2 = vehicles.get(index[1]);
			Text Car2 = new Text("Car 2: " + vehicle2.getLicensePlate() + ", " + vehicle2.getVehicleMake() + ", " + vehicle2.getVehicleColor());
			Car2.setFont(Font.font("Times New Roman",15));
			Car2.setFill(Color.WHITE);
			GridPane.setConstraints(Car2, 0, 2, 1, 1);
			
			Vehicle vehicle3 = vehicles.get(index[2]);
			Text Car3 = new Text ("Car 3: " + vehicle3.getLicensePlate() + ", " + vehicle3.getVehicleMake() + ", " + vehicle3.getVehicleColor());
			Car3.setFont(Font.font("Times New Roman",15));
			Car3.setFill(Color.WHITE);
			GridPane.setConstraints(Car3, 0, 3, 1, 1);
			grid.getChildren().addAll(Car1, Car2, Car3);
		}
		
		
		
		
		
		if (carCount < 3) {
			Button add = new Button("Add");
			GridPane.setConstraints(add, 1, carCount + 1, 1, 1);//under the textfields
			grid.getChildren().add(add);
			add.setOnAction(new EventHandler<ActionEvent>()//whenever button is clicked code to handle is in this class
			{
				@Override
				public void handle (ActionEvent event)
				{
					try {
						primaryStage.setScene(vehicleInformation(primaryStage, cart));   
					} catch (Exception e) {
						// TODO Auto-generated catch block
						System.out.println("IN ADD");//check if fail
						e.printStackTrace();
					}
					
				}
			});//go here when pressed
		}
		
		
		//if (cart.getCustomer().vehicleCount >0) {
			//Button remove = new Button ("Remove");
			//GridPane.setConstraints(remove, 0,3);
			//grid.getChildren().add(remove);
			
		//}
		
		//cart.getCustomer().addVehicle(v);
		//cart.getCustomer().updateDBV();
		
		if (carCount > 0) {
			ObservableList<String> removeOptions;
			if (carCount == 1) {
				removeOptions = FXCollections.observableArrayList("Vehicle 1");
			}
			else if (carCount == 2) {
				removeOptions = FXCollections.observableArrayList("Vehicle 1", "Vehicle 2");
			}
			else {
				removeOptions = FXCollections.observableArrayList("Vehicle 1", "Vehicle 2", "Vehicle 3");
			}
			ComboBox<String> removeBox = new ComboBox<String>(removeOptions);
			removeBox.setPromptText("Remove Vehicle");
			removeBox.setStyle("-fx-border-color: GREEN; -fx-border-width: 2px;");
			grid.add(removeBox, 0, carCount + 2, 1, 1);
			
			removeBox.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent arg0) {
					removeBox.setPromptText(removeBox.getValue());
				}
			});
			
			Button remove = new Button("Remove");
			GridPane.setConstraints(remove, 1, carCount + 2, 1, 1);
			grid.getChildren().add(remove);
			remove.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent arg0) {
					if (removeBox.getValue().equals("Vehicle 1")) {
						try {
							String vin = vehicles.get(index[0]).getVIN();
							cart.getCustomer().removeVehicle(vin);
							
						}catch (Exception e ) {
							System.out.println("IN REMOVE1");
							e.printStackTrace();
						}
					}
					else if (removeBox.getValue().equals("Vehicle 2")) {
						try {
							String vin = vehicles.get(index[1]).getVIN();
							cart.getCustomer().removeVehicle(vin);
						
						}catch (Exception e ) {
							System.out.println("IN REMOVE2");
							e.printStackTrace();
						}
					}
					else {
						try {
							String vin = vehicles.get(index[2]).getVIN();
							cart.getCustomer().removeVehicle(vin);
							
						}catch (Exception e ) {
							System.out.println("IN REMOVE3");
							e.printStackTrace();
						}
					}
				}
				
			});
		}
		
		//create button 
		Button button = new Button("Next");
		GridPane.setConstraints(button, 0, carCount + 1, 1, 1);//under the textfields
		button.setOnAction(new EventHandler<ActionEvent>()//whenever button is clicked code to handle is in this class
		{
			@Override
			public void handle (ActionEvent event)
			{
				try {
					primaryStage.setScene(payForPermit(primaryStage, cart));   
				} catch (Exception e) {
					// TODO Auto-generated catch block
					System.out.println("IN SELECT");//check if fail
					e.printStackTrace();
				}
				
			}
		});//go here when pressed
		

		//set up grid
		grid.getChildren().addAll(text, button);
		
		//set up scene
		Scene scene = new Scene(grid, 400, 300);
		
		//background
		BackgroundFill bf = new BackgroundFill(Color.DARKSEAGREEN, CornerRadii.EMPTY, Insets.EMPTY);
		Background bg = new Background(bf);
		grid.setBackground(bg);
		
		//scene setting
		primaryStage.setScene(scene);
		primaryStage.show();
		
		return scene;
	}
